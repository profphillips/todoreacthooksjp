{"version":3,"sources":["hooks/useToggleState.js","hooks/useInputState.js","reducers/todo.reducer.js","context/todos.context.js","hooks/useLocalStorageReducer.js","EditTodoForm.js","Todo.js","TodoList.js","TodoForm.js","TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["useToggle","initialVal","useState","state","setState","toggle","useInputState","value","setValue","e","target","reducer","action","type","id","uuid","task","completed","filter","todo","map","newTask","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","key","defaultVal","useReducer","JSON","parse","window","localStorage","getItem","String","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","todoReducer","todos","Provider","children","EditTodoForm","toggleEditForm","useContext","handleChange","reset","onSubmit","preventDefault","style","marginLeft","width","onChange","autoFocus","Todo","useToggleState","isEditing","className","tabIndex","defaultChecked","onClick","textDecoration","aria-label","memo","TodoList","length","i","Fragment","TodoForm","label","TodoApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a4d93f4.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useToggle(initialVal = false) {\r\n  // call useState, \"reserve piece of state\"\r\n  const [state, setState] = useState(initialVal);\r\n  const toggle = () => {\r\n    setState(!state);\r\n  };\r\n  // return piece of state AND a function to toggle it\r\n  return [state, toggle];\r\n}\r\nexport default useToggle;\r\n","import { useState } from \"react\";\r\n\r\nconst useInputState = (initialVal) => {\r\n  const [value, setValue] = useState(initialVal);\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  const reset = () => {\r\n    setValue(\"\");\r\n  };\r\n  return [value, handleChange, reset];\r\n};\r\nexport default useInputState;\r\n","import { v4 as uuid } from \"uuid\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return [...state, { id: uuid(), task: action.task, completed: false }];\r\n    case \"REMOVE\":\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    case \"TOGGLE\":\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n    case \"EDIT\":\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, task: action.newTask } : todo\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import React, { createContext } from \"react\";\r\nimport { useLocalStorageReducer } from \"../hooks/useLocalStorageReducer\";\r\nimport todoReducer from \"../reducers/todo.reducer.js\";\r\n\r\nconst defaultTodos = [\r\n  { id: 1, task: \"Mow the lawn using goats\", completed: false },\r\n  { id: 2, task: \"Release lady bugs into garden\", completed: true },\r\n];\r\nexport const TodosContext = createContext();\r\nexport const DispatchContext = createContext();\r\nexport function TodosProvider(props) {\r\n  const [todos, dispatch] = useLocalStorageReducer(\r\n    \"todos\",\r\n    defaultTodos,\r\n    todoReducer\r\n  );\r\n  return (\r\n    <TodosContext.Provider value={todos}>\r\n      <DispatchContext.Provider value={dispatch}>\r\n        {props.children}\r\n      </DispatchContext.Provider>\r\n    </TodosContext.Provider>\r\n  );\r\n}\r\n","import { useReducer, useEffect } from \"react\";\r\n\r\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\r\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\r\n    let value;\r\n    try {\r\n      value = JSON.parse(\r\n        window.localStorage.getItem(key) || String(defaultVal)\r\n      );\r\n    } catch (e) {\r\n      value = defaultVal;\r\n    }\r\n    return value;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n    // eslint-disable-next-line\r\n  }, [state]);\r\n\r\n  return [state, dispatch];\r\n}\r\nexport { useLocalStorageReducer };\r\n","import React, { useContext } from \"react\";\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport { DispatchContext } from \"./context/todos.context\";\r\n\r\nfunction EditTodoForm({ id, task, toggleEditForm }) {\r\n  const dispatch = useContext(DispatchContext);\r\n  const [value, handleChange, reset] = useInputState(task);\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: \"EDIT\", id: id, newTask: value });\r\n        reset();\r\n        toggleEditForm();\r\n      }}\r\n      style={{ marginLeft: \"1rem\", width: \"50%\" }}\r\n    >\r\n      <input type=\"text\" value={value} onChange={handleChange} autoFocus />\r\n    </form>\r\n  );\r\n}\r\nexport default EditTodoForm;\r\n","import React, { useContext, memo } from \"react\";\r\nimport useToggleState from \"./hooks/useToggleState\";\r\nimport EditTodoForm from \"./EditTodoForm\";\r\nimport { DispatchContext } from \"./context/todos.context\";\r\n\r\nfunction Todo({ id, task, completed }) {\r\n  const dispatch = useContext(DispatchContext);\r\n  const [isEditing, toggle] = useToggleState(false);\r\n  return (\r\n    <div>\r\n      {isEditing ? (\r\n        <EditTodoForm id={id} task={task} toggleEditForm={toggle} />\r\n      ) : (\r\n        <>\r\n          <li className=\"todolistitem\">\r\n            <input\r\n              className=\"todocheckbox\"\r\n              type=\"checkbox\"\r\n              tabIndex={-1}\r\n              defaultChecked={completed}\r\n              onClick={() => dispatch({ type: \"TOGGLE\", id: id })}\r\n            />\r\n            <span\r\n              className=\"todotask\"\r\n              style={{ textDecoration: completed ? \"line-through\" : \"none\" }}\r\n            >\r\n              {task}\r\n            </span>\r\n            <button\r\n              className=\"todobutton\"\r\n              aria-label=\"Delete\"\r\n              onClick={() => dispatch({ type: \"REMOVE\", id: id })}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button className=\"todobutton\" aria-label=\"Edit\" onClick={toggle}>\r\n              Edit\r\n            </button>\r\n          </li>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default memo(Todo);\r\n","import React, { useContext } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport { TodosContext } from \"./context/todos.context\";\r\n\r\nfunction TodoList() {\r\n  const todos = useContext(TodosContext);\r\n  if (todos.length)\r\n    return (\r\n      <div className='todos'>\r\n        {todos.map((todo, i) => (\r\n          // To add a key to a fragment, we have to use the long-hand version\r\n          // rather than <> </>, we have to use <React.Fragment>\r\n          <React.Fragment key={i}>\r\n            <Todo {...todo} key={todo.id} />\r\n            {i < todos.length - 1}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    );\r\n  return null;\r\n}\r\nexport default TodoList;\r\n","import React, { useContext } from \"react\";\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport { DispatchContext } from \"./context/todos.context\";\r\n\r\nfunction TodoForm() {\r\n  const [value, handleChange, reset] = useInputState(\"\");\r\n  const dispatch = useContext(DispatchContext);\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          dispatch({ type: \"ADD\", task: value });\r\n          reset();\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          label=\"Add New Todo\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default TodoForm;\r\n","import React from \"react\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport { TodosProvider } from \"./context/todos.context\";\r\n\r\nfunction TodoApp() {\r\n  return (\r\n    <div className='todoapp'>\r\n      <div>TODOS WITH HOOKS</div>\r\n      <TodosProvider>\r\n        <TodoForm />\r\n        <TodoList />\r\n      </TodosProvider>\r\n    </div>\r\n  );\r\n}\r\nexport default TodoApp;\r\n","import React from \"react\";\nimport TodoApp from \"./TodoApp\";\n\nfunction App() {\n  return <TodoApp />;\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}